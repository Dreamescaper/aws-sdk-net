{
  "version":"2.0",
  "metadata":{
    "apiVersion":"2020-07-14",
    "endpointPrefix":"jsonrpc10",
    "jsonVersion":"1.0",
    "protocol":"json",
    "serviceFullName":"Sample Json 1.0 Protocol Service",
    "serviceId":"JSON RPC 10",
    "signatureVersion":"v4",
    "signingName":"jsonrpc10",
    "targetPrefix":"JsonRpc10",
    "uid":"json-rpc-10-2020-07-14"
  },
  "operations":{
    "EmptyInputAndEmptyOutput":{
      "name":"EmptyInputAndEmptyOutput",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"EmptyInputAndEmptyOutputInput"},
      "output":{"shape":"EmptyInputAndEmptyOutputOutput"},
      "documentation":"<p>The example tests how requests and responses are serialized when there's no request or response payload because the operation has an empty input and empty output structure that reuses the same shape. While this should be rare, code generators must support this.</p>"
    },
    "EndpointOperation":{
      "name":"EndpointOperation",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "endpoint":{"hostPrefix":"foo."}
    },
    "EndpointWithHostLabelOperation":{
      "name":"EndpointWithHostLabelOperation",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"EndpointWithHostLabelOperationInput"},
      "endpoint":{
        "hostPrefix":"foo.{label}."
      }
    },
    "GreetingWithErrors":{
      "name":"GreetingWithErrors",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"GreetingWithErrorsInput"},
      "output":{"shape":"GreetingWithErrorsOutput"},
      "errors":[
        {"shape":"InvalidGreeting"},
        {"shape":"FooError"},
        {"shape":"ComplexError"}
      ],
      "documentation":"<p>This operation has three possible return values:</p> <ol> <li>A successful response in the form of GreetingWithErrorsOutput</li> <li>An InvalidGreeting error.</li> <li>A ComplexError error.</li> </ol> <p>Implementations must be able to successfully take a response and properly deserialize successful and error responses.</p>",
      "idempotent":true
    },
    "HostWithPathOperation":{
      "name":"HostWithPathOperation",
      "http":{
        "method":"POST",
        "requestUri":"/"
      }
    },
    "JsonUnions":{
      "name":"JsonUnions",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"JsonUnionsInput"},
      "output":{"shape":"JsonUnionsOutput"},
      "documentation":"<p>This operation uses unions for inputs and outputs.</p>",
      "idempotent":true
    },
    "NoInputAndNoOutput":{
      "name":"NoInputAndNoOutput",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "documentation":"<p>The example tests how requests and responses are serialized when there's no request or response payload because the operation has no input or output. While this should be rare, code generators must support this.</p>"
    },
    "NoInputAndOutput":{
      "name":"NoInputAndOutput",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "output":{"shape":"NoInputAndOutputOutput"},
      "documentation":"<p>The example tests how requests and responses are serialized when there's no request or response payload because the operation has no input and the output is empty. While this should be rare, code generators must support this.</p>"
    },
    "OperationWithDefaults":{
      "name":"OperationWithDefaults",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"OperationWithDefaultsInput"},
      "output":{"shape":"OperationWithDefaultsOutput"}
    },
    "OperationWithNestedStructure":{
      "name":"OperationWithNestedStructure",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"OperationWithNestedStructureInput"},
      "output":{"shape":"OperationWithNestedStructureOutput"}
    },
    "OperationWithRequiredMembers":{
      "name":"OperationWithRequiredMembers",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "output":{"shape":"OperationWithRequiredMembersOutput"}
    },
    "PutWithContentEncoding":{
      "name":"PutWithContentEncoding",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"PutWithContentEncodingInput"},
      "requestcompression":{"encodings":["gzip"]}
    },
    "SimpleScalarProperties":{
      "name":"SimpleScalarProperties",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"SimpleScalarPropertiesInput"},
      "output":{"shape":"SimpleScalarPropertiesOutput"}
    }
  },
  "shapes":{
    "Blob":{"type":"blob"},
    "Boolean":{
      "type":"boolean",
      "box":true
    },
    "ClientOptionalDefaults":{
      "type":"structure",
      "members":{
        "member":{"shape":"Integer"}
      }
    },
    "ComplexError":{
      "type":"structure",
      "members":{
        "TopLevel":{"shape":"String"},
        "Nested":{"shape":"ComplexNestedErrorData"}
      },
      "documentation":"<p>This error is thrown when a request is invalid.</p>",
      "exception":true
    },
    "ComplexNestedErrorData":{
      "type":"structure",
      "members":{
        "Foo":{
          "shape":"String",
          "locationName":"Fooooo"
        }
      }
    },
    "Defaults":{
      "type":"structure",
      "members":{
        "defaultString":{"shape":"String"},
        "defaultBoolean":{"shape":"Boolean"},
        "defaultList":{"shape":"TestStringList"},
        "defaultDocumentMap":{"shape":"Document"},
        "defaultDocumentString":{"shape":"Document"},
        "defaultDocumentBoolean":{"shape":"Document"},
        "defaultDocumentList":{"shape":"Document"},
        "defaultNullDocument":{"shape":"Document"},
        "defaultTimestamp":{"shape":"Timestamp"},
        "defaultBlob":{"shape":"Blob"},
        "defaultByte":{"shape":"Integer"},
        "defaultShort":{"shape":"Integer"},
        "defaultInteger":{"shape":"Integer"},
        "defaultLong":{"shape":"Long"},
        "defaultFloat":{"shape":"Float"},
        "defaultDouble":{"shape":"Double"},
        "defaultMap":{"shape":"TestStringMap"},
        "defaultEnum":{"shape":"TestEnum"},
        "defaultIntEnum":{"shape":"TestIntEnum"},
        "emptyString":{"shape":"String"},
        "falseBoolean":{"shape":"Boolean"},
        "emptyBlob":{"shape":"Blob"},
        "zeroByte":{"shape":"Integer"},
        "zeroShort":{"shape":"Integer"},
        "zeroInteger":{"shape":"Integer"},
        "zeroLong":{"shape":"Long"},
        "zeroFloat":{"shape":"Float"},
        "zeroDouble":{"shape":"Double"}
      }
    },
    "Dialog":{
      "type":"structure",
      "members":{
        "language":{"shape":"String"},
        "greeting":{"shape":"String"},
        "farewell":{"shape":"Farewell"}
      }
    },
    "DialogList":{
      "type":"list",
      "member":{"shape":"Dialog"}
    },
    "DialogMap":{
      "type":"map",
      "key":{"shape":"String"},
      "value":{"shape":"Dialog"}
    },
    "Document":{
      "type":"structure",
      "members":{
      },
      "document":true
    },
    "Double":{
      "type":"double",
      "box":true
    },
    "EmptyInputAndEmptyOutputInput":{
      "type":"structure",
      "members":{
      }
    },
    "EmptyInputAndEmptyOutputOutput":{
      "type":"structure",
      "members":{
      }
    },
    "EndpointWithHostLabelOperationInput":{
      "type":"structure",
      "required":["label"],
      "members":{
        "label":{
          "shape":"String",
          "hostLabel":true
        }
      }
    },
    "Farewell":{
      "type":"structure",
      "members":{
        "phrase":{"shape":"String"}
      }
    },
    "Float":{
      "type":"float",
      "box":true
    },
    "FooEnum":{
      "type":"string",
      "enum":[
        "Foo",
        "Baz",
        "Bar",
        "1",
        "0"
      ]
    },
    "FooError":{
      "type":"structure",
      "members":{
      },
      "documentation":"<p>This error has test cases that test some of the dark corners of Amazon service framework history. It should only be implemented by clients.</p>",
      "exception":true,
      "fault":true
    },
    "GreetingStruct":{
      "type":"structure",
      "members":{
        "hi":{"shape":"String"}
      }
    },
    "GreetingWithErrorsInput":{
      "type":"structure",
      "members":{
        "greeting":{"shape":"String"}
      }
    },
    "GreetingWithErrorsOutput":{
      "type":"structure",
      "members":{
        "greeting":{"shape":"String"}
      }
    },
    "Integer":{
      "type":"integer",
      "box":true
    },
    "IntegerEnum":{
      "type":"integer",
      "box":true
    },
    "InvalidGreeting":{
      "type":"structure",
      "members":{
        "Message":{"shape":"String"}
      },
      "documentation":"<p>This error is thrown when an invalid greeting value is provided.</p>",
      "exception":true
    },
    "JsonUnionsInput":{
      "type":"structure",
      "members":{
        "contents":{"shape":"MyUnion"}
      }
    },
    "JsonUnionsOutput":{
      "type":"structure",
      "members":{
        "contents":{"shape":"MyUnion"}
      }
    },
    "Long":{
      "type":"long",
      "box":true
    },
    "MyUnion":{
      "type":"structure",
      "members":{
        "stringValue":{"shape":"String"},
        "booleanValue":{"shape":"Boolean"},
        "numberValue":{"shape":"Integer"},
        "blobValue":{"shape":"Blob"},
        "timestampValue":{"shape":"Timestamp"},
        "enumValue":{"shape":"FooEnum"},
        "intEnumValue":{"shape":"IntegerEnum"},
        "listValue":{"shape":"StringList"},
        "mapValue":{"shape":"StringMap"},
        "structureValue":{"shape":"GreetingStruct"}
      },
      "documentation":"<p>A union with a representative set of types for members.</p>",
      "union":true
    },
    "NoInputAndOutputOutput":{
      "type":"structure",
      "members":{
      }
    },
    "OperationWithDefaultsInput":{
      "type":"structure",
      "members":{
        "defaults":{"shape":"Defaults"},
        "clientOptionalDefaults":{"shape":"ClientOptionalDefaults"},
        "topLevelDefault":{"shape":"String"},
        "otherTopLevelDefault":{"shape":"Integer"}
      }
    },
    "OperationWithDefaultsOutput":{
      "type":"structure",
      "members":{
        "defaultString":{"shape":"String"},
        "defaultBoolean":{"shape":"Boolean"},
        "defaultList":{"shape":"TestStringList"},
        "defaultDocumentMap":{"shape":"Document"},
        "defaultDocumentString":{"shape":"Document"},
        "defaultDocumentBoolean":{"shape":"Document"},
        "defaultDocumentList":{"shape":"Document"},
        "defaultNullDocument":{"shape":"Document"},
        "defaultTimestamp":{"shape":"Timestamp"},
        "defaultBlob":{"shape":"Blob"},
        "defaultByte":{"shape":"Integer"},
        "defaultShort":{"shape":"Integer"},
        "defaultInteger":{"shape":"Integer"},
        "defaultLong":{"shape":"Long"},
        "defaultFloat":{"shape":"Float"},
        "defaultDouble":{"shape":"Double"},
        "defaultMap":{"shape":"TestStringMap"},
        "defaultEnum":{"shape":"TestEnum"},
        "defaultIntEnum":{"shape":"TestIntEnum"},
        "emptyString":{"shape":"String"},
        "falseBoolean":{"shape":"Boolean"},
        "emptyBlob":{"shape":"Blob"},
        "zeroByte":{"shape":"Integer"},
        "zeroShort":{"shape":"Integer"},
        "zeroInteger":{"shape":"Integer"},
        "zeroLong":{"shape":"Long"},
        "zeroFloat":{"shape":"Float"},
        "zeroDouble":{"shape":"Double"}
      }
    },
    "OperationWithNestedStructureInput":{
      "type":"structure",
      "required":["topLevel"],
      "members":{
        "topLevel":{"shape":"TopLevel"}
      }
    },
    "OperationWithNestedStructureOutput":{
      "type":"structure",
      "required":["dialog"],
      "members":{
        "dialog":{"shape":"Dialog"},
        "dialogList":{"shape":"DialogList"},
        "dialogMap":{"shape":"DialogMap"}
      }
    },
    "OperationWithRequiredMembersOutput":{
      "type":"structure",
      "required":[
        "requiredString",
        "requiredBoolean",
        "requiredList",
        "requiredTimestamp",
        "requiredBlob",
        "requiredByte",
        "requiredShort",
        "requiredInteger",
        "requiredLong",
        "requiredFloat",
        "requiredDouble",
        "requiredMap"
      ],
      "members":{
        "requiredString":{"shape":"String"},
        "requiredBoolean":{"shape":"Boolean"},
        "requiredList":{"shape":"RequiredStringList"},
        "requiredTimestamp":{"shape":"Timestamp"},
        "requiredBlob":{"shape":"Blob"},
        "requiredByte":{"shape":"Integer"},
        "requiredShort":{"shape":"Integer"},
        "requiredInteger":{"shape":"Integer"},
        "requiredLong":{"shape":"Long"},
        "requiredFloat":{"shape":"Float"},
        "requiredDouble":{"shape":"Double"},
        "requiredMap":{"shape":"RequiredStringMap"}
      }
    },
    "PutWithContentEncodingInput":{
      "type":"structure",
      "members":{
        "encoding":{"shape":"String"},
        "data":{"shape":"String"}
      }
    },
    "RequiredStringList":{
      "type":"list",
      "member":{"shape":"String"}
    },
    "RequiredStringMap":{
      "type":"map",
      "key":{"shape":"String"},
      "value":{"shape":"String"}
    },
    "SimpleScalarPropertiesInput":{
      "type":"structure",
      "members":{
        "floatValue":{"shape":"Float"},
        "doubleValue":{"shape":"Double"}
      }
    },
    "SimpleScalarPropertiesOutput":{
      "type":"structure",
      "members":{
        "floatValue":{"shape":"Float"},
        "doubleValue":{"shape":"Double"}
      }
    },
    "String":{"type":"string"},
    "StringList":{
      "type":"list",
      "member":{"shape":"String"}
    },
    "StringMap":{
      "type":"map",
      "key":{"shape":"String"},
      "value":{"shape":"String"}
    },
    "TestEnum":{
      "type":"string",
      "enum":[
        "FOO",
        "BAR",
        "BAZ"
      ]
    },
    "TestIntEnum":{
      "type":"integer",
      "box":true
    },
    "TestStringList":{
      "type":"list",
      "member":{"shape":"String"}
    },
    "TestStringMap":{
      "type":"map",
      "key":{"shape":"String"},
      "value":{"shape":"String"}
    },
    "Timestamp":{"type":"timestamp"},
    "TopLevel":{
      "type":"structure",
      "required":["dialog"],
      "members":{
        "dialog":{"shape":"Dialog"},
        "dialogList":{"shape":"DialogList"},
        "dialogMap":{"shape":"DialogMap"}
      }
    }
  }
}
